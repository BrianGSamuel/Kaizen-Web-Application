@model KaizenWebApp.ViewModels.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
}

<div class="container" style="margin-top: 0; padding-top: 0;">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card shadow-lg border-0" style="margin-top: 0;">
                <div class="card-header bg-gradient text-white text-center py-3 animated-header" style="background: linear-gradient(135deg, #E31E24 0%, #c41e3a 100%);">
                    <h3 class="mb-0 animated-title">
                        <i class="fas fa-lock me-2 animated-icon"></i>Change Password
                    </h3>
                    <p class="mb-0 mt-2 opacity-75 animated-subtitle">Update your account password securely</p>
                </div>
                <div class="card-body p-2">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-ban me-2"></i>@TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>Please correct the errors below.
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <form asp-action="ChangeMyPassword" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="mb-1">
                            <label asp-for="Username" class="form-label">
                                <i class="fas fa-user me-2"></i>Username
                            </label>
                            <input asp-for="Username" class="form-control" readonly />
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="mb-1">
                            <label asp-for="CurrentPassword" class="form-label">
                                <i class="fas fa-key me-2"></i>Current Password
                            </label>
                            <div class="input-group">
                                <input asp-for="CurrentPassword" class="form-control" type="password" placeholder="Enter your current password" />
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('CurrentPassword')">
                                    <i class="fas fa-eye" id="CurrentPassword-icon"></i>
                                </button>
                            </div>
                            <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-1">
                            <label asp-for="NewPassword" class="form-label">
                                <i class="fas fa-lock me-2"></i>New Password
                            </label>
                            <div class="input-group">
                                <input asp-for="NewPassword" class="form-control" type="password" placeholder="Enter your new password" />
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('NewPassword')">
                                    <i class="fas fa-eye" id="NewPassword-icon"></i>
                                </button>
                            </div>
                            <div class="form-text">
                                <small class="text-muted">
                                    <i class="fas fa-info-circle me-1"></i>Password must be at least 8 characters long
                                </small>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-2">
                            <label asp-for="ConfirmNewPassword" class="form-label">
                                <i class="fas fa-check-circle me-2"></i>Confirm New Password
                            </label>
                            <div class="input-group">
                                <input asp-for="ConfirmNewPassword" class="form-control" type="password" placeholder="Confirm your new password" />
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('ConfirmNewPassword')">
                                    <i class="fas fa-eye" id="ConfirmNewPassword-icon"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-save me-2"></i>Update Password
                            </button>
                            @{
                                var username = Context.User.Identity?.Name;
                                var isUser = username?.ToLower().Contains("user") == true;
                                var dashboardAction = isUser ? "Kaizenform" : "KaizenListManager";
                            }
                            <a asp-controller="Kaizen" asp-action="@dashboardAction" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function togglePassword(fieldId) {
            const input = document.getElementById(fieldId);
            const icon = document.getElementById(fieldId + '-icon');

            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Add password strength indicator
        document.getElementById('NewPassword').addEventListener('input', function() {
            const password = this.value;
            const strength = calculatePasswordStrength(password);
            updatePasswordStrengthIndicator(strength);
        });

        function calculatePasswordStrength(password) {
            let score = 0;

            if (password.length >= 8) score++;
            if (/[a-z]/.test(password)) score++;
            if (/[A-Z]/.test(password)) score++;
            if (/[0-9]/.test(password)) score++;
            if (/[^A-Za-z0-9]/.test(password)) score++;

            return score;
        }

        function updatePasswordStrengthIndicator(strength) {
            const strengthText = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
            const strengthColors = ['#dc3545', '#fd7e14', '#ffc107', '#28a745', '#20c997'];

            // You can add a visual indicator here if needed
            console.log(`Password strength: ${strengthText[strength - 1] || 'Very Weak'}`);
        }
    </script>
}

<style>
    .card {
        border-radius: 15px;
        overflow: hidden;
    }

    .card-header {
        border-bottom: none;
        background: linear-gradient(135deg, #E31E24 0%, #c41e3a 100%) !important;
        padding: 1.5rem !important;
        position: relative;
        overflow: hidden;
    }

    /* Animated gradient background */
    .animated-header {
        background: linear-gradient(-45deg, #E31E24, #c41e3a, #E31E24, #FF6B6B) !important;
        background-size: 400% 400% !important;
        animation: gradientShift 6s ease infinite;
    }

        /* Animated overlay effect */
        .animated-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            animation: shimmer 3s infinite;
        }

    .card-header h3 {
        color: white !important;
        font-weight: 700 !important;
        font-size: 1.8rem !important;
        margin: 0 !important;
        position: relative;
        z-index: 1;
    }

    .card-header p {
        color: rgba(255, 255, 255, 0.9) !important;
        font-size: 1.1rem !important;
        margin: 0.5rem 0 0 0 !important;
        position: relative;
        z-index: 1;
    }

    /* Title animation */
    .animated-title {
        animation: slideInFromTop 1s ease-out;
        transform-origin: center;
    }

    /* Subtitle animation */
    .animated-subtitle {
        animation: slideInFromBottom 1s ease-out 0.3s both;
        opacity: 0;
    }

    /* Icon animation */
    .animated-icon {
        animation: rotateIn 1.2s ease-out 0.5s both, pulse 2s infinite 2s;
        display: inline-block;
    }

    /* Keyframe animations */
    @@keyframes gradientShift {
        0%

    {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }

    }

    @@keyframes shimmer {
        0%

    {
        left: -100%;
    }

    100% {
        left: 100%;
    }

    }

    @@keyframes slideInFromTop {
        0%

    {
        transform: translateY(-30px);
        opacity: 0;
    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }

    }

    @@keyframes slideInFromBottom {
        0%

    {
        transform: translateY(20px);
        opacity: 0;
    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }

    }

    @@keyframes rotateIn {
        0%

    {
        transform: rotate(-180deg) scale(0);
        opacity: 0;
    }

    100% {
        transform: rotate(0deg) scale(1);
        opacity: 1;
    }

    }

    @@keyframes pulse {
        0%, 100%

    {
        transform: scale(1);
    }

    50% {
        transform: scale(1.1);
    }

    }

    /* Additional hover effects for the header */
    .animated-header:hover {
        animation-duration: 2s;
    }

        .animated-header:hover .animated-icon {
            animation: pulse 0.8s infinite;
        }

    .form-control {
        border-radius: 8px;
        border: 2px solid #e9ecef;
        transition: all 0.3s ease;
    }

        .form-control:focus {
            border-color: #E31E24;
            box-shadow: 0 0 0 0.2rem rgba(227, 30, 36, 0.25);
        }

    .btn-primary {
        background: linear-gradient(135deg, #E31E24 0%, #c41e3a 100%);
        border: none;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(227, 30, 36, 0.4);
        }

    .btn-outline-secondary {
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-outline-secondary:hover {
            transform: translateY(-1px);
        }

    .input-group .btn {
        border-radius: 0 8px 8px 0;
    }

    .form-label {
        font-weight: 600;
        color: #495057;
    }

    .alert {
        border-radius: 8px;
        border: none;
    }
</style>