@model KaizenWebApp.ViewModels.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/_SupervisorLayout.cshtml";
}

<div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
        <div class="supervisor-card">
            <div class="supervisor-card-header">
                <h5 class="supervisor-card-title">
                    <i class="fas fa-key me-2"></i>Change Password
                </h5>
            </div>
            
            <div class="supervisor-card-body">
                <!-- Messages now handled by toast system -->

                <form asp-action="ChangeSupervisorPassword" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="mb-3">
                        <label asp-for="Username" class="form-label">
                            <i class="fas fa-user me-2"></i>Username
                        </label>
                        <input asp-for="Username" class="form-control" readonly />
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="CurrentPassword" class="form-label">
                            <i class="fas fa-key me-2"></i>Current Password
                        </label>
                        <div class="input-group">
                            <input asp-for="CurrentPassword" class="form-control" type="password" placeholder="Enter your current password" />
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('CurrentPassword')">
                                <i class="fas fa-eye" id="CurrentPassword-icon"></i>
                            </button>
                        </div>
                        <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="NewPassword" class="form-label">
                            <i class="fas fa-lock me-2"></i>New Password
                        </label>
                        <div class="input-group">
                            <input asp-for="NewPassword" class="form-control" type="password" placeholder="Enter your new password" />
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('NewPassword')">
                                <i class="fas fa-eye" id="NewPassword-icon"></i>
                            </button>
                        </div>
                        <div class="form-text">
                            <small class="text-muted">
                                <i class="fas fa-info-circle me-1"></i>Password must be at least 8 characters long
                            </small>
                        </div>
                        <span asp-validation-for="NewPassword" class="text-danger"></span>
                    </div>

                    <div class="mb-4">
                        <label asp-for="ConfirmNewPassword" class="form-label">
                            <i class="fas fa-check-circle me-2"></i>Confirm New Password
                        </label>
                        <div class="input-group">
                            <input asp-for="ConfirmNewPassword" class="form-control" type="password" placeholder="Confirm your new password" />
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('ConfirmNewPassword')">
                                <i class="fas fa-eye" id="ConfirmNewPassword-icon"></i>
                            </button>
                        </div>
                        <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-supervisor btn-lg">
                            <i class="fas fa-save me-2"></i>Update Password
                        </button>
                        
                        <a asp-controller="Kaizen" asp-action="SupervisorDashboard" class="btn btn-supervisor-outline">
                            <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function togglePassword(fieldId) {
            const input = document.getElementById(fieldId);
            const icon = document.getElementById(fieldId + '-icon');

            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Add password strength indicator
        document.getElementById('NewPassword').addEventListener('input', function() {
            const password = this.value;
            const strength = calculatePasswordStrength(password);
            updatePasswordStrengthIndicator(strength);
        });

        function calculatePasswordStrength(password) {
            let strength = 0;
            
            if (password.length >= 8) strength += 1;
            if (/[a-z]/.test(password)) strength += 1;
            if (/[A-Z]/.test(password)) strength += 1;
            if (/[0-9]/.test(password)) strength += 1;
            if (/[^A-Za-z0-9]/.test(password)) strength += 1;
            
            return strength;
        }

        function updatePasswordStrengthIndicator(strength) {
            const strengthText = document.getElementById('password-strength-text');
            const strengthBar = document.getElementById('password-strength-bar');
            
            if (!strengthText || !strengthBar) return;
            
            const strengthLabels = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
            const strengthColors = ['#dc3545', '#fd7e14', '#ffc107', '#28a745', '#20c997'];
            
            strengthText.textContent = strengthLabels[Math.min(strength - 1, 4)];
            strengthText.className = 'text-' + (strength <= 2 ? 'danger' : strength <= 3 ? 'warning' : 'success');
            strengthBar.style.width = (strength * 20) + '%';
            strengthBar.style.backgroundColor = strengthColors[Math.min(strength - 1, 4)];
        }

        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            var alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                var bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}

