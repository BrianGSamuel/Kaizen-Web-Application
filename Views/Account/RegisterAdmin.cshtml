@using KaizenWebApp.ViewModels;
@model RegisterViewModel;

@{
    ViewData["Title"] = "Add New User";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="admin-card">
    <div class="admin-card-header">
        <h5 class="admin-card-title">
            <i class="fas fa-user-plus me-2"></i>Add New User
        </h5>
    </div>
    
    <form asp-action="RegisterAdmin" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="EmployeeName" class="form-label">Employee Name</label>
                    <input asp-for="EmployeeName" class="form-control" placeholder="Enter employee name" />
                    <span asp-validation-for="EmployeeName" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="EmployeeNumber" class="form-label">Employee Number</label>
                    <input asp-for="EmployeeNumber" class="form-control" placeholder="Enter employee number" />
                    <span asp-validation-for="EmployeeNumber" class="text-danger"></span>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="Department" class="form-label">Department</label>
                    <input asp-for="Department" class="form-control" placeholder="Enter department" />
                    <span asp-validation-for="Department" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="Plant" class="form-label">Plant</label>
                    <input asp-for="Plant" class="form-control" placeholder="Enter plant" />
                    <span asp-validation-for="Plant" class="text-danger"></span>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="Username" class="form-label">Username <i class="fas fa-magic text-info" title="Auto-generated"></i></label>
                    <input asp-for="Username" class="form-control" id="usernameInput" placeholder="Username will be auto-generated" readonly />
                    <span asp-validation-for="Username" class="text-danger"></span>
                    <small class="form-text text-muted">Username is automatically generated from Employee Number and Role</small>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="Role" class="form-label">Role</label>
                    <select asp-for="Role" class="form-control" id="roleSelect">
                        <option value="">Select Role</option>
                        <option value="User">User</option>
                        <option value="Engineer">Engineer</option>
                        <option value="Manager">Manager</option>
                        <option value="Supervisor">Supervisor</option>
                        <option value="KaizenTeam">Kaizen Team</option>
                        <option value="Admin">Admin</option>
                    </select>
                    <span asp-validation-for="Role" class="text-danger"></span>
                </div>
            </div>
        </div>
        
        <div class="row" id="emailRow" style="display: none;">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="Email" class="form-label">Email <span class="text-danger">*</span></label>
                    <input asp-for="Email" type="email" class="form-control" placeholder="Enter email address" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                    <small class="form-text text-muted">Email is required for Engineer and Manager roles</small>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="Password" class="form-label">Password</label>
                    <input asp-for="Password" type="password" class="form-control" placeholder="Enter password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                    <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Confirm password" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
            </div>
        </div>
        
        <div class="d-flex justify-content-between">
            <a asp-controller="Admin" asp-action="Dashboard" class="btn btn-admin-outline">
                <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
            </a>
            <button type="submit" class="btn btn-admin">
                <i class="fas fa-user-plus me-2"></i>Add User
            </button>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
    
    <script>
        $(document).ready(function() {
            // Function to generate username
            function generateUsername() {
                var employeeNumber = $('#EmployeeNumber').val().trim();
                var role = $('#roleSelect').val();
                
                if (employeeNumber && role) {
                    var username = employeeNumber + '_' + role;
                    $('#usernameInput').val(username);
                } else {
                    $('#usernameInput').val('');
                }
            }
            
            // Function to show/hide email field based on role
            function toggleEmailField() {
                var role = $('#roleSelect').val();
                if (role === 'Engineer' || role === 'Manager') {
                    $('#emailRow').show();
                    $('#Email').prop('required', true);
                    $('#Email').attr('data-val-required', 'Email is required for Engineer and Manager roles.');
                } else {
                    $('#emailRow').hide();
                    $('#Email').prop('required', false);
                    $('#Email').removeAttr('data-val-required');
                    $('#Email').val('');
                }
            }
            
            // Function to validate form before submission
            function validateForm() {
                var role = $('#roleSelect').val();
                var email = $('#Email').val().trim();
                
                if ((role === 'Engineer' || role === 'Manager') && !email) {
                    alert('Email is required for Engineer and Manager roles.');
                    return false;
                }
                
                return true;
            }
            
            // Event listeners
            $('#EmployeeNumber, #roleSelect').on('input change', function() {
                generateUsername();
            });
            
            $('#roleSelect').on('change', function() {
                toggleEmailField();
            });
            
            // Form submission validation
            $('form').on('submit', function(e) {
                if (!validateForm()) {
                    e.preventDefault();
                    return false;
                }
            });
            
            // Initialize on page load
            generateUsername();
            toggleEmailField();
        });
    </script>
} 