@model KaizenWebApp.ViewModels.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
}

<div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
        <div class="kaizen-card">
            
            <div class="kaizen-card-body">
                

                    <form asp-action="ChangeManagerPassword" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="mb-1">
                            <label asp-for="Username" class="form-label">
                                <i class="fas fa-user me-2"></i>Username
                            </label>
                            <input asp-for="Username" class="form-control" readonly />
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="mb-1">
                            <label asp-for="CurrentPassword" class="form-label">
                                <i class="fas fa-key me-2"></i>Current Password
                            </label>
                            <div class="input-group">
                                <input asp-for="CurrentPassword" class="form-control" type="password" placeholder="Enter your current password" />
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('CurrentPassword')">
                                    <i class="fas fa-eye" id="CurrentPassword-icon"></i>
                                </button>
                            </div>
                            <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-1">
                            <label asp-for="NewPassword" class="form-label">
                                <i class="fas fa-lock me-2"></i>New Password
                            </label>
                            <div class="input-group">
                                <input asp-for="NewPassword" class="form-control" type="password" placeholder="Enter your new password" />
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('NewPassword')">
                                    <i class="fas fa-eye" id="NewPassword-icon"></i>
                                </button>
                            </div>
                            <div class="form-text">
                                <small class="text-muted">
                                    <i class="fas fa-info-circle me-1"></i>Password must be at least 8 characters long
                                </small>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-2">
                            <label asp-for="ConfirmNewPassword" class="form-label">
                                <i class="fas fa-check-circle me-2"></i>Confirm New Password
                            </label>
                            <div class="input-group">
                                <input asp-for="ConfirmNewPassword" class="form-control" type="password" placeholder="Confirm your new password" />
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('ConfirmNewPassword')">
                                    <i class="fas fa-eye" id="ConfirmNewPassword-icon"></i>
                                </button>
                            </div>
                                                     <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                         </div>

                         <div class="d-grid gap-2">
                             <button type="submit" class="btn btn-kaizen btn-lg">
                                 <i class="fas fa-save me-2"></i>Update Password
                             </button>
                             
                         </div>

                     </form>
                </div>
            </div>
        </div>
    </div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function togglePassword(fieldId) {
            const input = document.getElementById(fieldId);
            const icon = document.getElementById(fieldId + '-icon');

            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Add password strength indicator
        document.getElementById('NewPassword').addEventListener('input', function() {
            const password = this.value;
            const strength = calculatePasswordStrength(password);
            updatePasswordStrengthIndicator(strength);
        });

        function calculatePasswordStrength(password) {
            let score = 0;

            if (password.length >= 8) score++;
            if (/[a-z]/.test(password)) score++;
            if (/[A-Z]/.test(password)) score++;
            if (/[0-9]/.test(password)) score++;
            if (/[^A-Za-z0-9]/.test(password)) score++;

            return score;
        }

        function updatePasswordStrengthIndicator(strength) {
            const strengthText = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
            const strengthColors = ['#dc3545', '#fd7e14', '#ffc107', '#28a745', '#20c997'];

            // You can add a visual indicator here if needed
            console.log(`Password strength: ${strengthText[strength - 1] || 'Very Weak'}`);
        }
    </script>
}

<style>
    .kaizen-card {
        background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);
        border: none;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        margin-bottom: 20px;
    }

    .kaizen-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }

    .kaizen-card-body {
        padding: 2rem;
    }

    .form-control {
        border-radius: 12px;
        border: 2px solid #e5e7eb;
        padding: 0.875rem 1rem;
        transition: all 0.3s ease;
        font-size: 0.95rem;
        height: 48px;
        line-height: 1.2;
    }

    .form-control:focus {
        border-color: #1e40af;
        box-shadow: 0 0 0 0.2rem rgba(30, 64, 175, 0.25);
        transform: translateY(-2px);
    }

    .input-group .btn {
        border-radius: 0 12px 12px 0;
        border: 2px solid #e5e7eb;
        border-left: none;
        background-color: #f9fafb;
        color: #6b7280;
        transition: all 0.3s ease;
    }

    .input-group .btn:hover {
        background-color: #e5e7eb;
        color: #374151;
    }

    .form-label {
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 0.5rem;
        font-size: 0.95rem;
    }

    .alert {
        border-radius: 15px;
        border: none;
        padding: 1.5rem;
    }

    .alert-success {
        background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
        color: #065f46;
        border-left: 4px solid #10b981;
    }

    .alert-danger {
        background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
        color: #dc3545;
        border-left: 4px solid #dc3545;
    }

    .form-text {
        font-size: 0.875rem;
        color: #6b7280;
    }

    .text-muted {
        color: #6b7280 !important;
    }

    /* Button styling to match engineer page */
    .btn-kaizen {
        background: linear-gradient(135deg, #1e40af 0%, #3b82f6 100%);
        border: none;
        color: white;
        font-weight: 600;
        padding: 10px 25px;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .btn-kaizen:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(30, 64, 175, 0.4);
        color: white;
    }
</style>

