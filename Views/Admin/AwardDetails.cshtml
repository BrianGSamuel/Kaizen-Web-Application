@model KaizenWebApp.ViewModels.AwardDetailsViewModel
@{
    ViewData["Title"] = "Award Details";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="admin-card">
                <div class="admin-card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="admin-card-title">
                            <i class="fas fa-trophy text-warning me-2"></i>
                            Award Details - @Model.Kaizen.KaizenNo
                        </h3>
                        <a href="@Url.Action("AwardTracking", "Admin")" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-1"></i>
                            Back to Award Tracking
                        </a>
                    </div>
                </div>

                <!-- Success/Error Messages -->
                @if (TempData["SubmissionSuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle me-2"></i>
                        @TempData["SubmissionSuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                
                @if (TempData["SubmissionErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        @TempData["SubmissionErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                <!-- Kaizen Details Section -->
                <div class="row">
                    <div class="col-md-8">
                        <div class="card mb-4">
                            <div class="card-header bg-primary text-white">
                                <h5 class="mb-0">
                                    <i class="fas fa-file-alt me-2"></i>
                                    Kaizen Details
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="fw-bold">Kaizen Number:</label>
                                            <p class="text-primary fw-bold">@Model.Kaizen.KaizenNo</p>
                                        </div>
                                        <div class="mb-3">
                                            <label class="fw-bold">Date Submitted:</label>
                                            <p>@Model.Kaizen.DateSubmitted.ToString("MMMM dd, yyyy")</p>
                                        </div>
                                        <div class="mb-3">
                                            <label class="fw-bold">Department:</label>
                                            <p><span class="badge bg-info">@Model.Kaizen.Department</span></p>
                                        </div>
                                        <div class="mb-3">
                                            <label class="fw-bold">Employee:</label>
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(Model.Kaizen.EmployeePhotoPath))
                                                {
                                                    <img src="@Model.Kaizen.EmployeePhotoPath" 
                                                         alt="Employee Photo" 
                                                         class="rounded-circle me-2" 
                                                         style="width: 40px; height: 40px; object-fit: cover;">
                                                }
                                                else
                                                {
                                                    <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center me-2" 
                                                         style="width: 40px; height: 40px;">
                                                        <i class="fas fa-user text-white"></i>
                                                    </div>
                                                }
                                                <div>
                                                    <p class="mb-0 fw-bold">@Model.Kaizen.EmployeeName</p>
                                                    <small class="text-muted">@Model.Kaizen.EmployeeNo</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="fw-bold">Cost Saving:</label>
                                            @if (Model.Kaizen.CostSaving.HasValue && Model.Kaizen.CostSaving > 0)
                                            {
                                                <p class="text-success fw-bold">$@Model.Kaizen.CostSaving.Value.ToString("N2")</p>
                                            }
                                            else
                                            {
                                                <p class="text-muted">No cost saving</p>
                                            }
                                        </div>
                                        <div class="mb-3">
                                            <label class="fw-bold">Category:</label>
                                            <p>@Model.Kaizen.Category</p>
                                        </div>
                                        <div class="mb-3">
                                            <label class="fw-bold">Implementation Area:</label>
                                            <p>@Model.Kaizen.ImplementationArea</p>
                                        </div>
                                        <div class="mb-3">
                                            <label class="fw-bold">Can Implement in Other Fields:</label>
                                            <p><span class="badge bg-@(Model.Kaizen.CanImplementInOtherFields == "Yes" ? "success" : "secondary")">@Model.Kaizen.CanImplementInOtherFields</span></p>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label class="fw-bold">Suggestion Description:</label>
                                    <div class="border rounded p-3 bg-light">
                                        @Model.Kaizen.SuggestionDescription
                                    </div>
                                </div>

                                @if (!string.IsNullOrEmpty(Model.Kaizen.OtherBenefits))
                                {
                                    <div class="mb-3">
                                        <label class="fw-bold">Other Benefits:</label>
                                        <div class="border rounded p-3 bg-light">
                                            @Model.Kaizen.OtherBenefits
                                        </div>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(Model.Kaizen.Comments))
                                {
                                    <div class="mb-3">
                                        <label class="fw-bold">Comments:</label>
                                        <div class="border rounded p-3 bg-light">
                                            @Model.Kaizen.Comments
                                        </div>
                                    </div>
                                }

                                <!-- Before/After Images -->
                                <div class="row">
                                    @if (!string.IsNullOrEmpty(Model.Kaizen.BeforeKaizenImagePath))
                                    {
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label class="fw-bold">Before Kaizen:</label>
                                                <div class="text-center">
                                                    <img src="@Model.Kaizen.BeforeKaizenImagePath" 
                                                         class="img-fluid rounded border" 
                                                         alt="Before Kaizen" 
                                                         style="max-height: 200px; object-fit: cover;"
                                                         onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                                                    <div class="alert alert-info" style="display: none;">
                                                        <i class="fas fa-image me-2"></i>
                                                        Image not available
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.Kaizen.AfterKaizenImagePath))
                                    {
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label class="fw-bold">After Kaizen:</label>
                                                <div class="text-center">
                                                    <img src="@Model.Kaizen.AfterKaizenImagePath" 
                                                         class="img-fluid rounded border" 
                                                         alt="After Kaizen" 
                                                         style="max-height: 200px; object-fit: cover;"
                                                         onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                                                    <div class="alert alert-info" style="display: none;">
                                                        <i class="fas fa-image me-2"></i>
                                                        Image not available
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Award Information Section -->
                    <div class="col-md-4">
                        <!-- For KAIZEN COMMITTEE Use Section -->
                        <div class="card mb-4">
                            <div class="card-header" style="background-color: #FFD700; border: none;">
                                <h5 class="mb-0 text-dark">
                                    <i class="fas fa-trophy me-2"></i>
                                    For KAIZEN COMMITTEE Use
                                </h5>
                            </div>
                            <div class="card-body" style="background-color: #E8F5E8; border: 1px solid #ffffff;">
                                @if (Model.ExistingScores.Any())
                                {
                                    <!-- Award Status Based on Score -->
                                    <div class="mb-3">
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="fas fa-trophy text-warning me-2"></i>
                                            <strong>Award Status</strong>
                                        </div>
                                        @if (Model.TotalWeight > 0)
                                        {
                                            <div class="mb-2">
                                                <span class="badge @Model.AwardClass fs-6">
                                                    <i class="fas fa-trophy me-1"></i>
                                                    @Model.AwardName
                                                </span>
                                            </div>
                                            <p class="mb-1"><strong>Score:</strong> @Model.TotalScore / @Model.TotalWeight</p>
                                            <p class="mb-1"><strong>Percentage:</strong> 
                                                <span class="@(Model.Percentage >= 90 ? "text-success" : Model.Percentage >= 70 ? "text-warning" : "text-danger") fw-bold">
                                                    @Model.Percentage%
                                                </span>
                                            </p>
                                            @if (!string.IsNullOrEmpty(Model.Kaizen.CommitteeSignature))
                                            {
                                                <p class="mb-1"><strong>Committee Signature:</strong> @Model.Kaizen.CommitteeSignature</p>
                                            }
                                            @if (Model.Kaizen.AwardDate.HasValue)
                                            {
                                                <p class="mb-1"><strong>Award Date:</strong> @Model.Kaizen.AwardDate.Value.ToString("MMM dd, yyyy")</p>
                                            }
                                        }
                                        else
                                        {
                                            <div class="mb-2">
                                                <span class="badge bg-secondary fs-6">
                                                    <i class="fas fa-minus me-1"></i>
                                                    No Award
                                                </span>
                                            </div>
                                            <p class="text-muted">No scores available for award calculation.</p>
                                        }
                                    </div>

                                    <!-- Saved Marking Criteria Scores -->
                                    <div class="mb-3">
                                        <label class="fw-bold">Saved Marking Criteria Scores:</label>
                                        <div class="border rounded p-2 bg-white">
                                            @foreach (var score in Model.ExistingScores)
                                            {
                                                var criteria = Model.MarkingCriteria.FirstOrDefault(c => c.Id == score.MarkingCriteriaId);
                                                if (criteria != null)
                                                {
                                                    <div class="row mb-1">
                                                        <div class="col-6">@criteria.CriteriaName:</div>
                                                        <div class="col-6">@score.Score / @criteria.Weight</div>
                                                    </div>
                                                }
                                            }
                                            <hr class="my-2">
                                            <div class="row">
                                                <div class="col-6"><strong>Total Score:</strong></div>
                                                <div class="col-6"><strong>@Model.TotalScore / @Model.TotalWeight</strong></div>
                                            </div>
                                            <div class="row">
                                                <div class="col-6"><strong>Percentage:</strong></div>
                                                <div class="col-6">
                                                    <strong class="@(Model.Percentage >= 90 ? "text-success" : Model.Percentage >= 70 ? "text-warning" : "text-danger")">
                                                        @Model.Percentage%
                                                    </strong>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <!-- Award Assignment Form for Committee -->
                                    <form method="post" action="@Url.Action("AssignAward", "Admin")">
                                        <input type="hidden" name="kaizenId" value="@Model.Kaizen.Id" />
                                        
                                        <!-- Marking Criteria Section -->
                                        @{
                                            var hasExistingScores = Model.ExistingScores.Any();
                                        }
                                        @if (Model.MarkingCriteria.Any())
                                        {
                                            var totalWeight = 0;
                                            var totalScore = 0;
                                            
                                            <div class="mb-3">
                                                <label class="fw-bold">MARKING CRITERIA EVALUATION:</label>
                                                @if (hasExistingScores)
                                                {
                                                    <div class="alert alert-info mb-3">
                                                        <i class="fas fa-info-circle me-2"></i>
                                                        <strong>Read-Only Mode:</strong> Marks have already been assigned. This evaluation is for review only.
                                                    </div>
                                                }
                                                <div class="border rounded p-3 bg-white">
                                                    @foreach (var criteria in Model.MarkingCriteria)
                                                    {
                                                        totalWeight += criteria.Weight;
                                                        var existingScore = Model.ExistingScores.FirstOrDefault(s => s.MarkingCriteriaId == criteria.Id);
                                                        var scoreValue = existingScore?.Score ?? 0;
                                                        totalScore += scoreValue;
                                                        
                                                        <div class="row mb-2 align-items-center">
                                                            <div class="col-md-6">
                                                                <label class="form-label mb-1">
                                                                    <strong>@criteria.CriteriaName</strong>
                                                                    <span class="badge bg-info ms-2">@criteria.Weight%</span>
                                                                </label>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <div class="input-group">
                                                                    <input type="number" 
                                                                           class="form-control criteria-score @(hasExistingScores ? "bg-light" : "")" 
                                                                           name="criteriaScore_@criteria.Id"
                                                                           data-criteria-id="@criteria.Id"
                                                                           data-max-score="@criteria.Weight"
                                                                           min="0" 
                                                                           max="@criteria.Weight" 
                                                                           value="@scoreValue"
                                                                           placeholder="Score (0-@criteria.Weight)"
                                                                           @(hasExistingScores ? "readonly" : "")
                                                                           onchange="updateTotalScore()">
                                                                    <span class="input-group-text">/ @criteria.Weight</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    <hr>
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <strong>Total Weight: <span id="totalWeight" class="text-primary">@totalWeight%</span></strong>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <strong>Total Score: <span id="totalScore" class="text-success">@totalScore</span> / @totalWeight</strong>
                                                        </div>
                                                    </div>
                                                    <div class="mt-2">
                                                        @{
                                                            var percentage = totalWeight > 0 ? Math.Round((double)totalScore / totalWeight * 100, 1) : 0;
                                                            var percentageClass = percentage >= 90 ? "text-success" : percentage >= 70 ? "text-warning" : "text-danger";
                                                        }
                                                        <strong>Percentage Achieved: <span id="percentageAchieved" class="@percentageClass">@percentage%</span></strong>
                                                    </div>
                                                </div>
                                            </div>
                                        }



                                        <div class="mb-3">
                                            <label for="committeeSignature" class="form-label fw-bold">Committee Signature:</label>
                                            <input type="text" class="form-control" id="committeeSignature" name="committeeSignature" 
                                                   value="@Model.Kaizen.CommitteeSignature" required>
                                        </div>



                                        @if (!hasExistingScores)
                                        {
                                            <button type="submit" class="btn btn-success w-100">
                                                <i class="fas fa-clipboard-check me-2"></i>
                                                Assign Award
                                            </button>
                                        }
                                        else
                                        {
                                            <div class="alert alert-warning">
                                                <i class="fas fa-lock me-2"></i>
                                                <strong>Award Already Assigned:</strong> This kaizen has already been evaluated and awarded. No further changes can be made.
                                            </div>
                                        }
                                    </form>
                                }
                            </div>
                        </div>

                        <!-- Approval Status -->
                        <div class="card mt-3">
                            <div class="card-header bg-info text-white">
                                <h6 class="mb-0">
                                    <i class="fas fa-check-double me-2"></i>
                                    Approval Status
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-2">
                                    <span class="badge bg-@(Model.Kaizen.EngineerStatus == "Approved" ? "success" : "warning")">
                                        Engineer: @Model.Kaizen.EngineerStatus
                                    </span>
                                    @if (!string.IsNullOrEmpty(Model.Kaizen.EngineerApprovedBy))
                                    {
                                        <small class="text-muted d-block">by @Model.Kaizen.EngineerApprovedBy</small>
                                    }
                                </div>
                                <div class="mb-2">
                                    <span class="badge bg-@(Model.Kaizen.ManagerStatus == "Approved" ? "success" : "warning")">
                                        Manager: @Model.Kaizen.ManagerStatus
                                    </span>
                                    @if (!string.IsNullOrEmpty(Model.Kaizen.ManagerApprovedBy))
                                    {
                                        <small class="text-muted d-block">by @Model.Kaizen.ManagerApprovedBy</small>
                                    }
                                </div>
                                @if (!string.IsNullOrEmpty(Model.Kaizen.ManagerComments))
                                {
                                    <div class="mt-3">
                                        <label class="fw-bold small">Manager Comments:</label>
                                        <div class="border rounded p-2 bg-light small">
                                            @Model.Kaizen.ManagerComments
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


    <script>
        // Form validation
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            if (form) {
                form.addEventListener('submit', function(e) {
                    console.log('Form submission started');
                    
                    const signature = document.querySelector('input[name="committeeSignature"]').value;
                    const comments = document.querySelector('textarea[name="committeeComments"]').value;
                    
                    console.log('Form data:', {
                        signature: signature,
                        comments: comments
                    });
                    
                    // Log all score inputs
                    const scoreInputs = document.querySelectorAll('.criteria-score');
                    console.log(`Found ${scoreInputs.length} score inputs`);
                    scoreInputs.forEach((input, index) => {
                        console.log(`Score input ${index}: ${input.name} = ${input.value}`);
                    });
                    
                    // Basic validation - check if signature is provided
                    if (!signature.trim()) {
                        e.preventDefault();
                        console.log('Validation failed: No signature provided');
                        alert('Please provide a committee signature.');
                        return false;
                    }
                    
                    console.log('All validations passed, proceeding with submission');
                    
                    // Disable submit button to prevent double submission
                    const submitBtn = form.querySelector('button[type="submit"]');
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Saving...';
                    
                    console.log('Form submission proceeding...');
                });
            }
            
            // Initialize scoring
            updateTotalScore();
        });

        // Function to show toast messages
        function showToast(message, type = 'info') {
            const toastContainer = document.getElementById('toast-container') || createToastContainer();
            
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-white bg-${type === 'error' ? 'danger' : type === 'success' ? 'success' : 'info'} border-0`;
            toast.setAttribute('role', 'alert');
            toast.setAttribute('aria-live', 'assertive');
            toast.setAttribute('aria-atomic', 'true');
            
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            `;
            
            toastContainer.appendChild(toast);
            
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
            
            // Remove toast after it's hidden
            toast.addEventListener('hidden.bs.toast', () => {
                toast.remove();
            });
        }
        
        // Function to create toast container if it doesn't exist
        function createToastContainer() {
            const container = document.createElement('div');
            container.id = 'toast-container';
            container.className = 'toast-container position-fixed top-0 end-0 p-3';
            container.style.zIndex = '9999';
            document.body.appendChild(container);
            return container;
        }



        // Function to update total score and percentage
        function updateTotalScore() {
            const scoreInputs = document.querySelectorAll('.criteria-score');
            let totalScore = 0;
            let totalWeight = 0;
            
            scoreInputs.forEach(input => {
                const score = parseInt(input.value) || 0;
                const maxScore = parseInt(input.dataset.maxScore) || 0;
                
                totalScore += score;
                totalWeight += maxScore;
                
                // Validate input only if not readonly
                if (!input.readOnly && score > maxScore) {
                    input.value = maxScore;
                    totalScore = totalScore - score + maxScore;
                }
            });
            
            // Update display
            document.getElementById('totalScore').textContent = totalScore;
            document.getElementById('totalWeight').textContent = totalWeight + '%';
            
            // Calculate percentage
            const percentage = totalWeight > 0 ? Math.round((totalScore / totalWeight) * 100) : 0;
            document.getElementById('percentageAchieved').textContent = percentage + '%';
            
            // Update color based on percentage
            const percentageElement = document.getElementById('percentageAchieved');
            if (percentage >= 90) {
                percentageElement.className = 'text-success';
            } else if (percentage >= 70) {
                percentageElement.className = 'text-warning';
            } else {
                percentageElement.className = 'text-danger';
            }
        }
    </script>
} 