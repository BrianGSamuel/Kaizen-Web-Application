@model List<object>
@{
    ViewData["Title"] = "Assign Marks";
    Layout = "_KaizenTeamLayout";
}

<style>
    @@media print {
        .search-section {
            display: none !important;
        }
        
        .btn {
            display: none !important;
        }
        
        .card-header {
            background-color: #f8f9fa !important;
            color: #000 !important;
        }
        
        .table-dark {
            background-color: #343a40 !important;
            color: #fff !important;
        }
        
        .table-dark th {
            background-color: #343a40 !important;
            color: #fff !important;
        }
        
        .badge {
            border: 1px solid #000 !important;
        }
        
        .bg-success {
            background-color: #d4edda !important;
            color: #155724 !important;
        }
        
        .bg-danger {
            background-color: #f8d7da !important;
            color: #721c24 !important;
        }
        
        .bg-warning {
            background-color: #fff3cd !important;
            color: #856404 !important;
        }
        
        .bg-primary {
            background-color: #cce7ff !important;
            color: #004085 !important;
        }
        
        /* Additional print optimizations */
        body {
            margin: 0 !important;
            padding: 0 !important;
        }
        
        .container-fluid {
            width: 100% !important;
            max-width: none !important;
        }
        
        .card {
            border: 1px solid #000 !important;
            box-shadow: none !important;
        }
        
        .table {
            font-size: 12px !important;
        }
        
        .table th,
        .table td {
            padding: 8px 4px !important;
            border: 1px solid #000 !important;
        }
        
        /* Ensure text is readable in print */
        .text-muted {
            color: #6c757d !important;
        }
        
        .text-success {
            color: #155724 !important;
        }
        
        /* Hide unnecessary elements */
        .kaizen-sidebar,
        .kaizen-header,
        .kaizen-toggle {
            display: none !important;
        }
        
        .kaizen-main {
            margin-left: 0 !important;
            padding: 0 !important;
        }
        
        .kaizen-content {
            padding: 0 !important;
        }
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="admin-card">
               
                <!-- Header Section -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h4 class="mb-0">
                        <i class="fas fa-clipboard-check text-success me-2"></i>
                        Assign Marks
                    </h4>
                </div>

                <!-- Search Section -->
                <div class="card mb-4 search-section">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">
                            <i class="fas fa-search me-2"></i>
                            Search & Filter
                        </h5>
                    </div>
                    <div class="card-body">
                        <form method="get" action="@Url.Action("AwardTracking", "Admin")" id="searchForm">
                            <div class="row">
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="startDate" class="form-label fw-bold">Start Date</label>
                                        <input type="date" class="form-control" id="startDate" name="startDate" 
                                               value="@Context.Request.Query["startDate"]">
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="endDate" class="form-label fw-bold">End Date</label>
                                        <input type="date" class="form-control" id="endDate" name="endDate" 
                                               value="@Context.Request.Query["endDate"]">
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="department" class="form-label fw-bold">Department</label>
                                        <select class="form-select" id="department" name="department">
                                            <option value="">All Departments</option>
                                            @foreach (var dept in ViewBag.Departments ?? new List<string>())
                                            {
                                                var selected = Context.Request.Query["department"].ToString() == dept;
                                                <option value="@dept" selected="@selected">@dept</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="mb-3">
                                        <label for="category" class="form-label fw-bold">Category</label>
                                        <select class="form-select" id="category" name="category">
                                            <option value="">All Categories</option>
                                            @foreach (var cat in ViewBag.Categories ?? new List<string>())
                                            {
                                                var selected = Context.Request.Query["category"].ToString() == cat;
                                                <option value="@cat" selected="@selected">@cat</option>
                                            }
                                        </select>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div class="d-flex gap-2">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-search me-2"></i>
                                            Search
                                        </button>
                                        <a href="@Url.Action("AwardTracking", "Admin")" class="btn btn-outline-secondary">
                                            <i class="fas fa-times me-2"></i>
                                            Clear Filters
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Messages now handled by toast system -->

                @if (!Model.Any())
                {
                    <div class="text-center py-5">
                        <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">No Approved Kaizens Found</h5>
                        <p class="text-muted">No kaizens match your current search criteria.</p>
                        <a href="@Url.Action("AwardTracking", "Admin")" class="btn btn-primary">
                            <i class="fas fa-times me-2"></i>
                            Clear Filters
                        </a>
                    </div>
                }
                else
                {
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div class="text-muted">
                            <i class="fas fa-list me-2"></i>
                            Showing @Model.Count() approved kaizen(s)
                        </div>
                        <div class="d-flex gap-2 align-items-center">
                            @if (!string.IsNullOrEmpty(Context.Request.Query["startDate"]) || 
                              !string.IsNullOrEmpty(Context.Request.Query["endDate"]) || 
                              !string.IsNullOrEmpty(Context.Request.Query["department"]) || 
                              !string.IsNullOrEmpty(Context.Request.Query["category"]))
                            {
                                <div class="text-muted small me-3">
                                    <i class="fas fa-filter me-1"></i>
                                    Filters applied
                                </div>
                            }
                            <button type="button" class="btn btn-success btn-sm" onclick="exportToExcel()" title="Export to Excel format">
                                <i class="fas fa-file-excel me-1"></i>Export Excel
                            </button>
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="printResults()">
                                <i class="fas fa-print me-1"></i>Print
                            </button>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th style="min-width: 120px; max-width: 150px; word-wrap: break-word;">Kaizen No</th>
                                    <th>Employee</th>
                                    <th>Department</th>
                                    <th>Date Submitted</th>
                                    <th>Cost Saving</th>
                                    <th>Score</th>
                                    <th>Award Status</th>
                                    <th style="min-width: 200px; white-space: nowrap;">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (dynamic item in Model)
                                {
                                    var kaizen = item.Kaizen;
                                    var score = item.Score;
                                    var totalWeight = item.TotalWeight;
                                    var percentage = item.Percentage;
                                    
                                    <tr>
                                        <td style="min-width: 120px; max-width: 150px; word-wrap: break-word;">
                                            <strong>@kaizen.KaizenNo</strong>
                                        </td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(kaizen.EmployeePhotoPath))
                                                {
                                                    <img src="@kaizen.EmployeePhotoPath" 
                                                         alt="Employee Photo" 
                                                         class="rounded-circle me-2" 
                                                         style="width: 30px; height: 30px; object-fit: cover;">
                                                }
                                                else
                                                {
                                                    <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center me-2" 
                                                         style="width: 30px; height: 30px;">
                                                        <i class="fas fa-user text-white" style="font-size: 12px;"></i>
                                                    </div>
                                                }
                                                <div>
                                                    <div class="fw-bold">@kaizen.EmployeeName</div>
                                                    <small class="text-muted">@kaizen.EmployeeNo</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge bg-info">@kaizen.Department</span>
                                        </td>
                                        <td>
                                            <small>@kaizen.DateSubmitted.ToString("MMM dd, yyyy")</small>
                                        </td>
                                                                                 <td>
                                             @{
                                                 var costSaving = kaizen.CostSaving;
                                                 var hasCostSaving = costSaving != null && costSaving > 0;
                                             }
                                             @if (hasCostSaving)
                                             {
                                                 <span class="text-success fw-bold">
                                                     $@costSaving.ToString("N2")
                                                 </span>
                                             }
                                             else
                                             {
                                                 <span class="text-muted">No cost saving</span>
                                             }
                                         </td>
                                        <td>
                                            @if (totalWeight > 0)
                                            {
                                                var badgeClass = percentage >= 90 ? "bg-success" : 
                                                               percentage >= 70 ? "bg-warning" : "bg-danger";
                                                <span class="badge @badgeClass">
                                                    <i class="fas fa-percentage me-1"></i>
                                                    @percentage.ToString("F1")%
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">
                                                    <i class="fas fa-minus me-1"></i>
                                                    No Score
                                                </span>
                                            }
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(kaizen.AwardPrice?.ToString()))
                                            {
                                                <span class="badge bg-success">
                                                    <i class="fas fa-trophy me-1"></i>
                                                    @kaizen.AwardPrice
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">
                                                    <i class="fas fa-clock me-1"></i>
                                                    Pending
                                                </span>
                                            }
                                        </td>
                                        <td style="min-width: 200px; white-space: nowrap;">
                                            <div class="btn-group" role="group" style="flex-wrap: nowrap;">
                                                <a href="@Url.Action("TeamMarksDetails", "Kaizen", new { id = kaizen.Id })" 
                                                   class="btn btn-sm @(percentage > 0 ? "btn-outline-primary" : "btn-primary")">
                                                    <i class="fas fa-eye me-1"></i>
                                                    View Details
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>



 @section Scripts {
     <script>

        // Search functionality enhancements
        document.addEventListener('DOMContentLoaded', function() {
            const searchForm = document.getElementById('searchForm');
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');

            // Set default date range to last 30 days if no dates are selected
            if (!startDateInput.value && !endDateInput.value) {
                const today = new Date();
                const thirtyDaysAgo = new Date();
                thirtyDaysAgo.setDate(today.getDate() - 30);
                
                startDateInput.value = thirtyDaysAgo.toISOString().split('T')[0];
                endDateInput.value = today.toISOString().split('T')[0];
            }

            // Validate date range
            searchForm.addEventListener('submit', function(e) {
                const startDate = new Date(startDateInput.value);
                const endDate = new Date(endDateInput.value);
                
                if (startDateInput.value && endDateInput.value && startDate > endDate) {
                    e.preventDefault();
                    showToast('Start date cannot be after end date.', 'error');
                    return false;
                }
            });

            // Auto-submit form when filters change (optional)
            const filterInputs = document.querySelectorAll('#department, #category');
            filterInputs.forEach(input => {
                input.addEventListener('change', function() {
                    // Uncomment the line below if you want auto-submit on filter change
                    // searchForm.submit();
                });
            });
        });

        function exportToExcel() {
            // Show loading indicator
            const exportBtn = event.target;
            const originalText = exportBtn.innerHTML;
            exportBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Exporting...';
            exportBtn.disabled = true;
            
            var form = document.getElementById('searchForm');
            var formData = new FormData(form);
            var params = new URLSearchParams();
            
            // Add form data to params
            for (var pair of formData.entries()) {
                if (pair[1]) { // Only add non-empty values
                    params.append(pair[0], pair[1]);
                }
            }
            
            var url = '/Admin/ExportAwardTrackingToExcel?' + params.toString();
            
            // Create a temporary link to trigger download
            var link = document.createElement('a');
            link.href = url;
            link.target = '_blank';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            
            // Reset button after a short delay
            setTimeout(() => {
                exportBtn.innerHTML = originalText;
                exportBtn.disabled = false;
            }, 2000);
        }

        function printResults() {
            window.print();
        }
    </script>
}
