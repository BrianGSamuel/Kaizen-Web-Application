@model IEnumerable<KaizenWebApp.Models.KaizenForm>

@{
    ViewData["Title"] = "Inter-Department Suggestions";
    Layout = "~/Views/Shared/_EngineerLayout.cshtml";
}

@{
    // Add anti-forgery token for AJAX requests
    var token = Html.AntiForgeryToken();
}

<div class="container-fluid">
    @token
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-search me-2"></i>
                        Search & Filter
                    </h5>
                </div>
                <div class="card-body">
                    <form method="get" action="@Url.Action("InterDeptSuggestions", "Kaizen")" id="searchForm">
                        <div class="row">
                            <div class="col-md-2">
                                <div class="mb-3">
                                    <label for="startDate" class="form-label fw-bold">Start Date</label>
                                    <input type="date" class="form-control" id="startDate" name="startDate" 
                                           value="@Context.Request.Query["startDate"]">
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="mb-3">
                                    <label for="endDate" class="form-label fw-bold">End Date</label>
                                    <input type="date" class="form-control" id="endDate" name="endDate" 
                                           value="@Context.Request.Query["endDate"]">
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="mb-3">
                                    <label for="category" class="form-label fw-bold">Category</label>
                                    <select class="form-select" id="category" name="category">
                                        <option value="">All Categories</option>
                                        <option value="Cost reduction" selected="@(Context.Request.Query["category"].ToString() == "Cost reduction")">Major Cost reduction by innovation</option>
                                        <option value="Productivity Improvement" selected="@(Context.Request.Query["category"].ToString() == "Productivity Improvement")">Productivity Improvement</option>
                                        <option value="OHS Improvement" selected="@(Context.Request.Query["category"].ToString() == "OHS Improvement")">OHS Improvement</option>
                                        <option value="Quality Improvements" selected="@(Context.Request.Query["category"].ToString() == "Quality Improvements")">Quality Improvements</option>
                                        <option value="Environmental friendly" selected="@(Context.Request.Query["category"].ToString() == "Environmental friendly")">Environmental friendly Innovation</option>
                                        <option value="5S Improvement" selected="@(Context.Request.Query["category"].ToString() == "5S Improvement")">5S Improvement</option>
                                        <option value="Ergonomics Improvements" selected="@(Context.Request.Query["category"].ToString() == "Ergonomics Improvements")">Ergonomics Improvements</option>
                                        <option value="Energy Saving Improvement" selected="@(Context.Request.Query["category"].ToString() == "Energy Saving Improvement")">Energy Saving Improvement</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="mb-3">
                                    <label for="engineerStatus" class="form-label fw-bold">Engineer Status</label>
                                    <select class="form-select" id="engineerStatus" name="engineerStatus">
                                        <option value="">All Status</option>
                                        <option value="Approved" selected="@(Context.Request.Query["engineerStatus"].ToString() == "Approved")">Approved</option>
                                        <option value="Rejected" selected="@(Context.Request.Query["engineerStatus"].ToString() == "Rejected")">Rejected</option>
                                        <option value="Pending" selected="@(Context.Request.Query["engineerStatus"].ToString() == "Pending")">Pending</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="mb-3">
                                    <label for="managerStatus" class="form-label fw-bold">Manager Status</label>
                                    <select class="form-select" id="managerStatus" name="managerStatus">
                                        <option value="">All Status</option>
                                        <option value="Approved" selected="@(Context.Request.Query["managerStatus"].ToString() == "Approved")">Approved</option>
                                        <option value="Rejected" selected="@(Context.Request.Query["managerStatus"].ToString() == "Rejected")">Rejected</option>
                                        <option value="Pending" selected="@(Context.Request.Query["managerStatus"].ToString() == "Pending")">Pending</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-8">
                                <div class="mb-3">
                                    <label for="searchString" class="form-label fw-bold">Search</label>
                                    <input type="text" class="form-control" id="searchString" name="searchString" 
                                           placeholder="Search by Kaizen No, Employee Name, or Employee No..."
                                           value="@Context.Request.Query["searchString"]">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">&nbsp;</label>
                                    <div class="d-flex gap-2">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-search me-2"></i>
                                            Search
                                        </button>
                                        <a href="@Url.Action("InterDeptSuggestions", "Kaizen")" class="btn btn-outline-secondary">
                                            <i class="fas fa-times me-2"></i>
                                            Clear Filters
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            @if (!Model?.Any() ?? true)
            {
                <div class="text-center py-5">
                    <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No Inter-Department Suggestions Found</h5>
                    <p class="text-muted">No kaizens from your department match your current search criteria.</p>
                    <a href="@Url.Action("InterDeptSuggestions", "Kaizen")" class="btn btn-primary">
                        <i class="fas fa-times me-2"></i>
                        Clear Filters
                    </a>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="text-muted">
                                <i class="fas fa-list me-2"></i>
                                Showing @Model.Count() inter-department suggestion(s)
                            </div>
                            @if (!string.IsNullOrEmpty(Context.Request.Query["startDate"]) || 
                                  !string.IsNullOrEmpty(Context.Request.Query["endDate"]) || 
                                  !string.IsNullOrEmpty(Context.Request.Query["category"]) ||
                                  !string.IsNullOrEmpty(Context.Request.Query["engineerStatus"]) ||
                                  !string.IsNullOrEmpty(Context.Request.Query["managerStatus"]) ||
                                  !string.IsNullOrEmpty(Context.Request.Query["searchString"]))
                            {
                                <div class="text-muted small">
                                    <i class="fas fa-filter me-1"></i>
                                    Filters applied
                                </div>
                            }
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Date Submitted</th>
                                        <th>Kaizen No</th>
                                        <th>Employee</th>
                                        <th>Cost Saving</th>
                                        <th>Engineer Status</th>
                                        <th>Manager Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                <small>@item.DateSubmitted.ToString("MMM dd, yyyy")</small>
                                            </td>
                                            <td>
                                                <strong>@Html.DisplayFor(modelItem => item.KaizenNo)</strong>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(item.EmployeePhotoPath))
                                                    {
                                                        <img src="@item.EmployeePhotoPath" 
                                                             alt="Employee Photo" 
                                                             class="rounded-circle me-2" 
                                                             style="width: 30px; height: 30px; object-fit: cover;">
                                                    }
                                                    else
                                                    {
                                                        <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center me-2" 
                                                             style="width: 30px; height: 30px;">
                                                            <i class="fas fa-user text-white" style="font-size: 12px;"></i>
                                                        </div>
                                                    }
                                                    <div>
                                                        <div class="fw-bold">@Html.DisplayFor(modelItem => item.EmployeeName)</div>
                                                        <small class="text-muted">@Html.DisplayFor(modelItem => item.EmployeeNo)</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                @if (item.CostSaving.HasValue && item.CostSaving > 0)
                                                {
                                                    <span class="text-success fw-bold">
                                                        $@item.CostSaving.Value.ToString("N2")
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No cost saving</span>
                                                }
                                            </td>
                                            <td>
                                                @{
                                                    var engineerStatus = item.EngineerStatus ?? "Pending";
                                                    var statusClass = engineerStatus switch
                                                    {
                                                        "Approved" => "badge bg-success",
                                                        "Rejected" => "badge bg-danger",
                                                        _ => "badge bg-warning text-dark"
                                                    };
                                                }
                                                <span class="@statusClass">
                                                    <i class="fas fa-@(engineerStatus == "Approved" ? "check" : engineerStatus == "Rejected" ? "times" : "clock") me-1"></i>
                                                    @engineerStatus
                                                </span>
                                            </td>
                                            <td>
                                                @{
                                                    var currentEngineerStatus = item.EngineerStatus ?? "Pending";
                                                    string managerStatusDisplay;
                                                    string managerStatusClass;
                                                    
                                                    if (currentEngineerStatus == "Rejected")
                                                    {
                                                        managerStatusDisplay = null;
                                                        managerStatusClass = "text-muted";
                                                    }
                                                    else
                                                    {
                                                        var managerStatus = item.ManagerStatus ?? "Pending";
                                                        managerStatusDisplay = managerStatus;
                                                        managerStatusClass = managerStatus switch
                                                        {
                                                            "Approved" => "badge bg-success",
                                                            "Rejected" => "badge bg-danger",
                                                            _ => "badge bg-warning text-dark"
                                                        };
                                                    }
                                                }
                                                @if (currentEngineerStatus == "Rejected")
                                                {
                                                    <span class="@managerStatusClass">-</span>
                                                }
                                                else
                                                {
                                                    <span class="@managerStatusClass">
                                                        <i class="fas fa-@(managerStatusDisplay == "Approved" ? "check" : managerStatusDisplay == "Rejected" ? "times" : "clock") me-1"></i>
                                                        @managerStatusDisplay
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("KaizenDetailsEngineer", "Kaizen", new { id = item.Id })" 
                                                       class="btn btn-sm btn-outline-primary">
                                                        <i class="fas fa-eye me-1"></i>
                                                        View Details
                                                    </a>
                                                    @if ((item.EngineerStatus ?? "Pending") == "Pending")
                                                    {
                                                        <button class="btn btn-sm btn-warning" onclick="showApprovalPopup(@item.Id)">
                                                            <i class="fas fa-gavel me-1"></i>Approval
                                                        </button>
                                                    }
                                                    @{
                                                        var userDept = ViewBag.UserDepartment as string;
                                                        var approvedDepts = (item.InterDeptApprovedDepartments ?? "")
                                                            .Split(',', StringSplitOptions.RemoveEmptyEntries)
                                                            .Select(d => d.Trim())
                                                            .ToList();
                                                        var canShowInterDeptButton = !string.IsNullOrEmpty(item.ImplementationArea) &&
                                                            !string.IsNullOrEmpty(userDept) &&
                                                            !approvedDepts.Contains(userDept);
                                                    }
                                                    @if (canShowInterDeptButton)
                                                    {
                                                        <button id="interdept-btn-@item.Id" class="btn btn-sm btn-success" onclick="showInterDeptApprovalPopup(@item.Id, '@item.ImplementationArea')">
                                                            <i class="fas fa-check me-1"></i>Inter-Dept Approval
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Function to show approval popup
        function showApprovalPopup(kaizenId) {
            if (confirm('Do you want to approve or reject this kaizen suggestion?')) {
                // Redirect to approval page or show modal
                window.location.href = `/Kaizen/KaizenDetailsEngineer/${kaizenId}`;
            }
        }

        // Function to show inter-department approval popup
        function showInterDeptApprovalPopup(kaizenId, implementationArea) {
            const userDepartment = '@ViewBag.UserDepartment';
            const departments = implementationArea.split(',').map(dept => dept.trim());
            
            // Check if user's department is in the implementation area
            const userDeptInList = departments.includes(userDepartment);
            
            if (!userDeptInList) {
                alert('Your department is not listed in the implementation areas for this kaizen.');
                return;
            }

            const modalHtml = `
                <div class="modal fade" id="interDeptApprovalModal" tabindex="-1" aria-labelledby="interDeptApprovalModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="interDeptApprovalModalLabel">
                                    <i class="fas fa-gavel me-2"></i>Inter-Department Approval
                                </h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body text-center">
                                <div class="mb-4">
                                    <i class="fas fa-question-circle fa-3x text-primary mb-3"></i>
                                    <h5>What would you like to do with this Kaizen suggestion for your department?</h5>
                                    <p class="text-muted">You are approving for: <strong>${userDepartment}</strong></p>
                                </div>
                                <div class="d-flex justify-content-center gap-3">
                                    <button type="button" class="btn btn-success btn-lg px-4 py-3" onclick="approveInterDeptDirect(${kaizenId}, '${userDepartment}')" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%); border: none; color: white; font-weight: 600; border-radius: 8px; box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);">
                                        <i class="fas fa-check me-2"></i>Approve
                                    </button>
                                    <button type="button" class="btn btn-danger btn-lg px-4 py-3" onclick="rejectInterDeptDirect(${kaizenId}, '${userDepartment}')" style="background: linear-gradient(135deg, #dc3545 0%, #c82333 100%); border: none; color: white; font-weight: 600; border-radius: 8px; box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);">
                                        <i class="fas fa-times me-2"></i>Reject
                                    </button>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                    <i class="fas fa-times me-2"></i>Cancel
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            `;

            // Remove existing modal if any
            const existingModal = document.getElementById('interDeptApprovalModal');
            if (existingModal) {
                existingModal.remove();
            }

            // Add modal to body
            document.body.insertAdjacentHTML('beforeend', modalHtml);

            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('interDeptApprovalModal'));
            modal.show();
        }

        // Function to approve inter-department suggestion directly
        function approveInterDeptDirect(kaizenId, department) {
            if (confirm(`Are you sure you want to approve this Kaizen suggestion for ${department}?`)) {
                fetch('/Kaizen/InterDeptApproval', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        kaizenId: kaizenId,
                        department: department,
                        action: 'approve'
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showSubmissionToast('Inter-department approval submitted successfully!', 'success');
                        const modal = bootstrap.Modal.getInstance(document.getElementById('interDeptApprovalModal'));
                        modal.hide();
                        // Remove the button right away
                        const btn = document.getElementById(`interdept-btn-${kaizenId}`);
                        if (btn) btn.remove();
                    } else {
                        showToast('Error: ' + data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('An error occurred while processing the approval.', 'error');
                });
            }
        }

        // Function to reject inter-department suggestion directly
        function rejectInterDeptDirect(kaizenId, department) {
            if (confirm(`Are you sure you want to reject this Kaizen suggestion for ${department}?`)) {
                fetch('/Kaizen/InterDeptApproval', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        kaizenId: kaizenId,
                        department: department,
                        action: 'reject'
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showSubmissionToast('Inter-department rejection submitted successfully!', 'success');
                        const modal = bootstrap.Modal.getInstance(document.getElementById('interDeptApprovalModal'));
                        modal.hide();
                        // Reload to reflect ImplementationArea change
                        location.reload();
                    } else {
                        showToast('Error: ' + data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('An error occurred while processing the rejection.', 'error');
                });
            }
        }
    </script>
}
