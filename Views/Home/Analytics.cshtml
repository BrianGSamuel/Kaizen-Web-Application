@model IEnumerable<KaizenWebApp.Models.KaizenForm>

@{
    ViewData["Title"] = "Analytics Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .dashboard-header {
        background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        color: white;
        padding: 2rem 0;
        margin-bottom: 2rem;
        border-radius: 15px;
        box-shadow: 0 8px 25px rgba(108, 117, 125, 0.3);
    }

    body {
        background-color: #f8f9fa;
    }

    .stats-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    @@media (min-width: 1200px) {
        .stats-container {
            grid-template-columns: repeat(4, 1fr);
        }
    }

    .stat-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(0, 0, 0, 0.05);
        text-align: center;
        transition: all 0.3s ease;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1rem;
        font-size: 1.5rem;
        color: white;
    }

    .stat-icon.total {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
    }

    .stat-icon.savings {
        background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
    }

    .stat-icon.departments {
        background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%);
    }

    .stat-icon.approved {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    }

    .stat-number {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        color: var(--secondary-gray);
    }

    .stat-label {
        color: #6c757d;
        font-weight: 500;
        font-size: 0.9rem;
    }

    .kaizen-list-container {
        background: white;
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(0, 0, 0, 0.05);
    }

    .kaizen-item {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        border-left: 4px solid var(--primary-red);
        transition: all 0.3s ease;
    }

    .kaizen-item:hover {
        transform: translateX(5px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .kaizen-header {
        display: flex;
        justify-content: between;
        align-items: center;
        margin-bottom: 1rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .kaizen-no {
        background: var(--primary-red);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .kaizen-date {
        color: #6c757d;
        font-size: 0.9rem;
    }

    .kaizen-employee {
        font-weight: 600;
        color: var(--secondary-gray);
    }

    .kaizen-department {
        background: #e9ecef;
        color: #495057;
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 500;
    }

    .kaizen-description {
        color: #495057;
        line-height: 1.6;
        margin-bottom: 1rem;
    }

    .kaizen-cost {
        font-weight: 600;
        color: #28a745;
        font-size: 1.1rem;
    }

    .no-data-message {
        text-align: center;
        padding: 3rem;
        color: #6c757d;
    }

    .no-data-icon {
        font-size: 4rem;
        margin-bottom: 1rem;
        opacity: 0.5;
    }

    @@media (max-width: 768px) {
        .stats-container {
            grid-template-columns: 1fr;
        }
        
        .kaizen-header {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .kaizen-item {
            padding: 1rem;
        }
    }

    /* Readonly form styling */
    .form-control[readonly] {
        background-color: #f8f9fa;
        border-color: #dee2e6;
        color: #495057;
        cursor: not-allowed;
    }

    .form-control[readonly]:focus {
        background-color: #f8f9fa;
        border-color: #dee2e6;
        box-shadow: none;
    }

    textarea.form-control[readonly] {
        resize: none;
        background-color: #f8f9fa;
        border-color: #dee2e6;
        color: #495057;
    }

    textarea.form-control[readonly]:focus {
        background-color: #f8f9fa;
        border-color: #dee2e6;
        box-shadow: none;
    }
</style>

<div class="container-fluid">
    <!-- Dashboard Header -->
    <div class="dashboard-header text-center">
        <div class="row align-items-center">
            <div class="col-md-8 mx-auto">
                <h1 class="display-5 fw-bold mb-3">
                    <i class="fas fa-chart-bar me-3"></i>Analytics Dashboard
                </h1>
                <p class="lead mb-0">Overview of continuous improvement initiatives</p>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="stats-container">
        <div class="stat-card">
            <div class="stat-icon total">
                <i class="fas fa-clipboard-list"></i>
            </div>
            <div class="stat-number">@(ViewBag.TotalKaizens?.ToString() ?? "0")</div>
            <div class="stat-label">Total Kaizen Suggestions</div>
        </div>
        
        <div class="stat-card">
            <div class="stat-icon savings">
                <i class="fas fa-coins"></i>
            </div>
            <div class="stat-number">$ @(ViewBag.TotalCostSaving?.ToString("N0") ?? "0")</div>
            <div class="stat-label">Total Cost Savings (Excluding Rejected)</div>
        </div>
        
        <div class="stat-card">
            <div class="stat-icon approved">
                <i class="fas fa-check-circle"></i>
            </div>
            <div class="stat-number">@(ViewBag.TotalApprovedKaizens?.ToString() ?? "0")</div>
            <div class="stat-label">Total Approved Kaizens</div>
        </div>
        
        <div class="stat-card">
            <div class="stat-icon departments">
                <i class="fas fa-building"></i>
            </div>
            <div class="stat-number">@(ViewBag.ActiveDepartmentsCount?.ToString() ?? "0")</div>
            <div class="stat-label">Active Departments</div>
        </div>
    </div>

    <!-- PDF Generation Section -->
    <div class="kaizen-list-container">
        <h3 class="mb-4">
            <i class="fas fa-file-pdf me-2"></i>Generate Kaizen Report
        </h3>
        
        @Html.AntiForgeryToken()
        
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="startDate" class="form-label fw-bold">
                        <i class="fas fa-calendar me-2"></i>Start Date
                    </label>
                    <input type="date" id="startDate" class="form-control" />
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="endDate" class="form-label fw-bold">
                        <i class="fas fa-calendar me-2"></i>End Date
                    </label>
                    <input type="date" id="endDate" class="form-control" />
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="departmentFilter" class="form-label fw-bold">
                        <i class="fas fa-building me-2"></i>Department
                    </label>
                    <select id="departmentFilter" class="form-control">
                        <option value="">All Departments</option>
                        @if (ViewBag.Departments != null)
                        {
                            @foreach (var dept in ViewBag.Departments)
                            {
                                <option value="@dept">@dept</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="statusFilter" class="form-label fw-bold">
                        <i class="fas fa-info-circle me-2"></i>Status
                    </label>
                    <select id="statusFilter" class="form-control">
                        <option value="">All Status</option>
                        <option value="Pending">Pending</option>
                        <option value="Approved">Approved</option>
                        <option value="Rejected">Rejected</option>
                    </select>
                </div>
            </div>
        </div>
        
        <div class="row mt-3">
            <div class="col-12">
                <button type="button" id="generatePdfBtn" class="btn btn-danger">
                    <i class="fas fa-file-pdf me-2"></i>Generate PDF Report
                </button>
                <div id="pdfLoading" class="mt-3" style="display: none;">
                    <div class="text-center">
                        <div class="spinner-border text-danger" role="status">
                            <span class="visually-hidden">Generating PDF...</span>
                        </div>
                        <p class="mt-2">Generating PDF report...</p>
                    </div>
                </div>
                <div id="pdfError" class="mt-3 alert alert-danger" style="display: none;">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <span id="pdfErrorMessage"></span>
                </div>
                <div id="pdfSuccess" class="mt-3 alert alert-success" style="display: none;">
                    <i class="fas fa-check-circle me-2"></i>
                    <span>PDF report generated successfully! Check your downloads.</span>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Kaizen Details Modal -->
<div class="modal fade" id="kaizenDetailsModal" tabindex="-1" aria-labelledby="kaizenDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="kaizenDetailsModalLabel">
                    <i class="fas fa-eye me-2"></i>Kaizen Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="kaizenDetailsContent">
                    <!-- Content will be loaded here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        console.log('Analytics page loaded');
        
        // Set default date range (last 30 days)
        const today = new Date();
        const thirtyDaysAgo = new Date(today.getTime() - (30 * 24 * 60 * 60 * 1000));
        
        document.getElementById('startDate').value = thirtyDaysAgo.toISOString().split('T')[0];
        document.getElementById('endDate').value = today.toISOString().split('T')[0];

        // PDF Generation
        $('#generatePdfBtn').click(function() {
            console.log('Generate PDF button clicked');
            generatePdfReport();
        });
        
        // Also add event listener using vanilla JavaScript as backup
        document.getElementById('generatePdfBtn').addEventListener('click', function() {
            console.log('Generate PDF button clicked (vanilla JS)');
            generatePdfReport();
        });


    });

    function generatePdfReport() {
        console.log('generatePdfReport function called');
        
        // Hide any previous messages
        document.getElementById('pdfError').style.display = 'none';
        document.getElementById('pdfSuccess').style.display = 'none';
        
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        const department = document.getElementById('departmentFilter').value;
        const status = document.getElementById('statusFilter').value;

        console.log('PDF Generation Parameters:', {
            startDate: startDate,
            endDate: endDate,
            department: department,
            status: status
        });

        // Validate date range
        if (!startDate || !endDate) {
            showPdfError('Please select both start and end dates.');
            return;
        }

        if (new Date(startDate) > new Date(endDate)) {
            showPdfError('Start date cannot be after end date.');
            return;
        }

        // Show loading
        document.getElementById('pdfLoading').style.display = 'block';
        document.getElementById('generatePdfBtn').disabled = true;

        console.log('Making AJAX request to generate PDF...');

        // Get CSRF token
        const token = $('input[name="__RequestVerificationToken"]').val();
        console.log('CSRF Token:', token);

        // Make AJAX request to generate PDF
        $.ajax({
            url: '@Url.Action("GeneratePdfReport", "Home")',
            type: 'POST',
            data: {
                startDate: startDate,
                endDate: endDate,
                department: department,
                status: status,
                __RequestVerificationToken: token
            },
            beforeSend: function(xhr) {
                console.log('AJAX request starting...');
                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            },
            success: function(response) {
                console.log('PDF Generation Response:', response);
                
                if (response.success) {
                    console.log('PDF generated successfully:', response.fileUrl);
                    
                    // Create a temporary link to download the PDF
                    const link = document.createElement('a');
                    link.href = response.fileUrl;
                    link.download = response.fileName;
                    link.target = '_blank';
                    link.style.display = 'none';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                    
                    showPdfSuccess();
                } else {
                    console.error('PDF generation failed:', response.message);
                    showPdfError(response.message || 'Error generating PDF report.');
                }
            },
            error: function(xhr, status, error) {
                console.error('AJAX Error:', {
                    status: status,
                    error: error,
                    responseText: xhr.responseText,
                    statusCode: xhr.status,
                    readyState: xhr.readyState
                });
                
                let errorMessage = 'Error generating PDF report. Please try again.';
                if (xhr.responseText) {
                    try {
                        const errorResponse = JSON.parse(xhr.responseText);
                        if (errorResponse.message) {
                            errorMessage = errorResponse.message;
                        }
                    } catch (e) {
                        console.error('Could not parse error response:', e);
                        console.error('Raw response:', xhr.responseText);
                    }
                }
                
                showPdfError(errorMessage);
            },
            complete: function() {
                console.log('AJAX request completed');
                document.getElementById('pdfLoading').style.display = 'none';
                document.getElementById('generatePdfBtn').disabled = false;
            }
        });
    }

    function showPdfError(message) {
        document.getElementById('pdfErrorMessage').textContent = message;
        document.getElementById('pdfError').style.display = 'block';
        document.getElementById('pdfSuccess').style.display = 'none';
    }

    function showPdfSuccess() {
        document.getElementById('pdfError').style.display = 'none';
        document.getElementById('pdfSuccess').style.display = 'block';
    }



    function viewKaizenDetails(id) {
        // Show loading state
        const modal = new bootstrap.Modal(document.getElementById('kaizenDetailsModal'));
        const contentDiv = document.getElementById('kaizenDetailsContent');
        
        contentDiv.innerHTML = `
            <div class="text-center py-4">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Loading Kaizen details...</p>
            </div>
        `;
        
        modal.show();

        // Fetch kaizen details
        fetch(`/Kaizen/Details/${id}`, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log('Response data:', data);
            if (data.success) {
                const kaizen = data.data;
                contentDiv.innerHTML = `
                    <form>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-calendar me-2"></i>Date Submitted
                                </label>
                                <input type="text" class="form-control" value="${kaizen.dateSubmitted}" readonly />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-calendar-check me-2"></i>Date Implemented
                                </label>
                                <input type="text" class="form-control" value="${kaizen.dateImplemented || 'Not implemented yet'}" readonly />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-hashtag me-2"></i>Kaizen No
                                </label>
                                <input type="text" class="form-control" value="${kaizen.kaizenNo}" readonly />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-building me-2"></i>Department Name
                                </label>
                                <input type="text" class="form-control" value="${kaizen.department}" readonly />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-user me-2"></i>Employee Name
                                </label>
                                <input type="text" class="form-control" value="${kaizen.employeeName}" readonly />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-id-badge me-2"></i>Employee No
                                </label>
                                <input type="text" class="form-control" value="${kaizen.employeeNo}" readonly />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">
                                <i class="fas fa-lightbulb me-2"></i>Kaizen Suggestion Description
                            </label>
                            <textarea class="form-control" rows="3" readonly>${kaizen.suggestionDescription || 'No description provided'}</textarea>
                        </div>

                        ${kaizen.beforeKaizenImagePath || kaizen.afterKaizenImagePath ? `
                        <div class="row mb-3">
                            ${kaizen.beforeKaizenImagePath ? `
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-image me-2"></i>Before Kaizen Image
                                </label>
                                <div class="text-center">
                                    <img src="${kaizen.beforeKaizenImagePath}" alt="Before Kaizen" class="img-fluid rounded" style="max-height: 200px; max-width: 100%;" />
                                </div>
                            </div>
                            ` : ''}
                            ${kaizen.afterKaizenImagePath ? `
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-image me-2"></i>After Kaizen Image
                                </label>
                                <div class="text-center">
                                    <img src="${kaizen.afterKaizenImagePath}" alt="After Kaizen" class="img-fluid rounded" style="max-height: 200px; max-width: 100%;" />
                                </div>
                            </div>
                            ` : ''}
                        </div>
                        ` : ''}

                        <div class="mb-3">
                            <label class="form-label">
                                <i class="fas fa-arrow-left me-2"></i>Before Kaizen Description
                            </label>
                            <textarea class="form-control" rows="2" readonly>${kaizen.beforeKaizen || 'No before description provided'}</textarea>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">
                                <i class="fas fa-arrow-right me-2"></i>After Kaizen Description
                            </label>
                            <textarea class="form-control" rows="2" readonly>${kaizen.afterKaizen || 'No after description provided'}</textarea>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-coins me-2"></i>Cost Saving Type
                                </label>
                                <input type="text" class="form-control" value="${kaizen.costSavingType || 'Not specified'}" readonly />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-dollar-sign me-2"></i>Current Dollar Rate
                                </label>
                                <input type="text" class="form-control" value="${kaizen.dollarRate ? `$ ${parseFloat(kaizen.dollarRate).toFixed(2)}` : 'Not specified'}" readonly />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-coins me-2"></i>Cost Saving ($ per year)
                                </label>
                                <input type="text" class="form-control" value="${kaizen.costSaving ? `$ ${parseFloat(kaizen.costSaving).toFixed(2)}` : 'No cost saving data'}" readonly />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-star me-2"></i>Other Benefits
                                </label>
                                <textarea class="form-control" rows="2" readonly>${kaizen.otherBenefits || 'No other benefits specified'}</textarea>
                            </div>
                        </div>
                    </form>
                `;
            } else {
                contentDiv.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Error: ${data.message}
                    </div>
                `;
            }
        })
        .catch(error => {
            console.error('Error details:', error);
            console.error('Error message:', error.message);
            console.error('Error stack:', error.stack);
            contentDiv.innerHTML = `
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    An error occurred while loading the Kaizen details. Please try again.<br>
                    <small class="text-muted">Error: ${error.message}</small>
                </div>
            `;
        });
    }
</script>